-------------------------------------------------------------------------------
--                                                                           --
--                                  Alice                                    --
--                                                                           --
--                              Organization                                 --
--                                                                           --
--                                  SPEC                                     --
--                                                                           --
--                     Copyright (C) 2012-, AdaHeads K/S                     --
--                                                                           --
--  This is free software;  you can redistribute it and/or modify it         --
--  under terms of the  GNU General Public License  as published by the      --
--  Free Software  Foundation;  either version 3,  or (at your  option) any  --
--  later version. This library is distributed in the hope that it will be   --
--  useful, but WITHOUT ANY WARRANTY;  without even the implied warranty of  --
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                     --
--  You should have received a copy of the GNU General Public License and    --
--  a copy of the GCC Runtime Library Exception along with this program;     --
--  see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
--  <http://www.gnu.org/licenses/>.                                          --
--                                                                           --
-------------------------------------------------------------------------------

with Ada.Strings.Unbounded;
with AWS.Dispatchers.Callback;
with AWS.Status;
with Common;
with GNATCOLL.SQL.Exec;
with My_Configuration;
with Response;
with Storage;
with Yolk.Cache.String_Keys;

package Organization is

   function Callback
     return AWS.Dispatchers.Callback.Handler;
   --  Return a callback for the "organization" interface.

private

   use Ada.Strings.Unbounded;
   use My_Configuration;

   type Cursor is new GNATCOLL.SQL.Exec.Forward_Cursor with null record;

   type Row is
      record
         Org_JSON               : Common.JSON_String;
         Org_Id                 : Natural;
         Org_Id_Column_Name     : Unbounded_String;
         Org_Name               : Unbounded_String;
         Org_Name_Column_Name   : Unbounded_String;
         Identifier             : Unbounded_String;
         Identifier_Column_Name : Unbounded_String;
         Ce_Id                  : Natural;
         Ce_Id_Column_Name      : Unbounded_String;
         Ce_Name                : Unbounded_String;
         Ce_Name_Column_Name    : Unbounded_String;
         Is_Human               : Boolean;
         Is_Human_Column_Name   : Unbounded_String;
         Attr_JSON              : Common.JSON_String;
      end record;

   function Element
     (C : in Cursor)
      return Row;
   --  Transforms the low level index based Cursor into the more readable Row
   --  record.

   function Prepared_Query
     return GNATCOLL.SQL.Exec.Prepared_Statement
   with inline;
   --  Return an SQL query as a prepared statement. We keep the query in a
   --  function of its own to protect against using sub-queries by accident and
   --  to make it more readable due to local use clauses.

   function Query_Parameters
     (Request : in AWS.Status.Data)
      return GNATCOLL.SQL.Exec.SQL_Parameters
   with inline;
   --  Generate the SQL parameters from given request parameters.

   procedure Create_JSON
     (C     : in out Cursor;
      Value : in out Common.JSON_String)
   with inline;
   --  Generate a JSON_String from the Row record(s) found in C and place it in
   --  Value.
   --  If C is empty, then Value is an empty JSON_String, ie. {}.

   package Cache is new Yolk.Cache.String_Keys
     (Element_Type      => Common.JSON_String,
      Cleanup_Size      => Config.Get (Cache_Size_Organization) + 1,
      Cleanup_On_Write  => True,
      Max_Element_Age   => Config.Get (Cache_Max_Element_Age),
      Reserved_Capacity => Config.Get (Cache_Size_Organization));
   --  Cache for the JSON_String generated by Create_JSON.

   package Query_To_JSON is new Storage.Generic_Query_To_JSON
     (Cursor           => Cursor,
      Query            => Prepared_Query,
      JSONIFY          => Create_JSON,
      Write_To_Cache   => Cache.Write,
      Query_Parameters => Query_Parameters);
   --  Turn the data found by Query and Query_Parameters into a JSON string and
   --  if the JSON_String object is not empty then write it to cache.

   package JSON_Response is new Response.Generic_Response
     (Check_Request_Parameters => Response.Check_Org_Id_Parameter,
      Get_Cache_Key            => Response.Get_Org_Id_Key,
      Read_From_Cache          => Cache.Read,
      Query_To_JSON            => Query_To_JSON);
   --  Generate the AWS.Response.Data that ultimately is delivered to the user.

end Organization;

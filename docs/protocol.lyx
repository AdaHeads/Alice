#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Alice Protocol
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Alice acts as the connector between one or more NAME_OF_PRODUCT clients,
 a PostgreSQL data store and one ore more PBX'es.
 Her main task is to get and set data via a HTTP/JSON based protocol.
\end_layout

\begin_layout Section
The Protocol
\end_layout

\begin_layout Standard
When data is requested (get) the search parameters are always given as a
 HTTP GET query string and the result is always returned as a JSON document.
 When data is inserted/updated/deleted (set) the parameters are always given
 as a HTTP POST request and the confirmation returned from Alice will always
 be a JSON document.
\end_layout

\begin_layout Standard
In order to access any of the interfaces, a client must first authenticate
 itself.
 This is done using OpenID.
 The login interface is the only interface that can be accessed without
 prior login.
\end_layout

\begin_layout Standard
All data handled by the protocol is expected to be UTF-8 encoded.
 Alice does not check whether this is in fact the case, so when implementing
 clients, be sure to verify that all data sent to Alice are UTF-8 encoded.
\end_layout

\begin_layout Standard
Application level errors and exceptions are returned as JSON documents.
 How these are handled is entirely up to the client.
 HTTP level errors are returned as normal for HTTP servers.
\end_layout

\begin_layout Section
The Same Origin Policy - JSONP
\end_layout

\begin_layout Standard
Same Origin Policy is a security feature found in the JavaScript implementation
 in most browser.
 It prevents you from making requests to pages on a different domain, another
 subdomain or through a different protocol.
 The consequence of this is that you cannot query Alice from a client on
 a different domain than the one used by Alice, which in some cases can
 be a pain.
\end_layout

\begin_layout Standard
The solution to this problem is something called the JSONP standard.
 This is supported transparently and out of the box by jQuery (and probably
 other Javascript frameworks).
 You simply change the 
\emph on
get()
\emph default
 or 
\emph on
post()
\emph default
 call to be JSONP based by stating that you would like the return type to
 be 
\emph on
json
\emph default
.
\end_layout

\begin_layout Standard
If you prefer to build your own query strings by hand, then you must add
 a 
\emph on
jsoncallback
\emph default
 (preferred) or 
\emph on
callback
\emph default
 (will work) parameter with any value.
 The value of 
\emph on
jsoncallback
\emph default
 is then used by Alice to wrap the returned JSON string, like this:
\end_layout

\begin_layout LyX-Code
/get/queue_length?jsoncallback=foo
\end_layout

\begin_layout LyX-Code
foo({
\begin_inset Quotes erd
\end_inset

length
\begin_inset Quotes erd
\end_inset

:7})
\end_layout

\begin_layout Standard
Strictly speaking this is only necessary if the client is running in a browser
 and is being hosted from another domain than Alice.
\end_layout

\begin_layout Section
The Data Model
\end_layout

\begin_layout Standard
Instead of using only a relational or document based model, we've opted
 for a mixture.
 Data that is relational in nature is stored in columns in a relational
 database, whereas everything else is stored in a JSON document.
 When a client requests a specific type of data Alice combines these two
 storage models into a final JSON document.
\end_layout

\begin_layout Standard
A benefit of this is that the client software easily can add new fields,
 simply by expanding on the JSON document.
 If we take the 
\emph on
/get/contact
\emph default
 interface as an example, it might return a JSON looking like this:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"name":"Arthur Dent",
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

items
\begin_inset Quotes erd
\end_inset

:[
\begin_inset Quotes erd
\end_inset

towel
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

heart of gold
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

dressing gown
\begin_inset Quotes erd
\end_inset

],
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

emailaddress
\begin_inset Quotes erd
\end_inset

:
\begin_inset Quotes erd
\end_inset

arthurdent42@somewhere.unknown.org
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

cellphone
\begin_inset Quotes erd
\end_inset

:
\begin_inset Quotes erd
\end_inset

555-777-888-999
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

dislikes
\begin_inset Quotes erd
\end_inset

:
\begin_inset Quotes erd
\end_inset

Vogons
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

db_columns
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1,
\end_layout

\begin_layout LyX-Code
"ce_name":"Arthur Dent",
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

sip_uri
\begin_inset Quotes erd
\end_inset

:
\begin_inset Quotes erd
\end_inset

sip://arthurdent.somewhere
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The 
\emph on
db_columns
\emph default
 JSON node is build from the actual columns available in the relational
 database, in this case 
\emph on
ce_id
\emph default
, 
\emph on
ce_name
\emph default
 and 
\emph on
sip_uri
\emph default
.
 The data found in these columns can be queried, sorted, grouped and/or
 joined by Alice.
 She is, so to speak, aware of them.
 
\end_layout

\begin_layout Standard
The other JSON nodes (
\emph on
name
\emph default
, 
\emph on
items
\emph default
, 
\emph on
emailaddress
\emph default
, 
\emph on
cellphone
\emph default
, 
\emph on
dislikes
\emph default
) comes from the JSON document associated with a contact entity.
 This is controlled 100% by the client software.
 Alice is completely oblivious as to what this document contains and why.
 Things put here are only searchable by the client.
\end_layout

\begin_layout Standard
The strength of this model is that new fields can be added to a contact
 entity on the fly, without needing any changes to Alice or the database.
 Changes to Alice and/or the database itself is only necessary if the new
 field must be searchable by Alice.
\end_layout

\begin_layout Standard
The weakness of this model is of course that a poorly designed/build client
 can end up with some very bad JSON.
 We believe the strength outweighs the weakness.
\end_layout

\begin_layout Section
Exceptions
\end_layout

\begin_layout Standard
When bad things happen an exception is raised and an error JSON document
 returned.
 These have the following format:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"exception_message":"foo", 
\end_layout

\begin_layout LyX-Code
"exception":"SOME.EXCEPTION", 
\end_layout

\begin_layout LyX-Code
"message":"bar"
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
All exceptions have this format.
 It is entirely up to the client to decide what to do with an exception.
\end_layout

\begin_layout Section
Getting Data
\end_layout

\begin_layout Subsection
/get/contact?ce_id=[natural integer]
\end_layout

\begin_layout Standard
This interface returns the JSON document associated with the contact entity
 identified by 
\emph on
ce_id
\emph default
.
 Example JSON document:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"name":"Arthur Dent",
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

db_columns
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1,
\end_layout

\begin_layout LyX-Code
"ce_name":"Arthur Dent",
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

sip_uri
\begin_inset Quotes erd
\end_inset

:
\begin_inset Quotes erd
\end_inset

sip://arthurdent.somewhere
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
An empty JSON document is returned if 
\emph on
ce_id
\emph default
 doesn't exist in the database:
\end_layout

\begin_layout LyX-Code
{}
\end_layout

\begin_layout Subsection
/get/contact_attributes?ce_id=[natural integer]
\end_layout

\begin_layout Standard
This interface returns the attributes associated with the 
\emph on
ce_id
\emph default
 contact entity.
 Example JSON document:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"attributes":
\end_layout

\begin_layout LyX-Code
[
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"phone":"555-777-888", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1, 
\end_layout

\begin_layout LyX-Code
"org_id":1
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\end_deeper
\begin_layout LyX-Code
"email":"some@email.address",
\end_layout

\begin_layout LyX-Code
"tags":["Ada","Slackware","Linux"]
\end_layout

\end_deeper
\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"phone":"999-000-111", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1, 
\end_layout

\begin_layout LyX-Code
"org_id":2
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\end_deeper
\begin_layout LyX-Code
"email":"some.other@email.address"
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
Note that 
\emph on
attributes
\emph default
 contains an array, meaning that one contact entity can be associated with
 several attribute sets.
 This means that the attributes of a contact entity can change depending
 on the context in which it is seen.
\end_layout

\begin_layout Standard
If there are no attributes associated with a contact entity, the following
 JSON document is returned:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"attributes":[]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Subsection
/get/organization?org_id=[natural_integer]
\end_layout

\begin_layout Standard
This interface returns the data associated with the 
\emph on
org_id
\emph default
 organization.
 Example JSON:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"name":"AdaHeads K/S", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"org_name":"AdaHeads K/S", 
\end_layout

\begin_layout LyX-Code
"identifier":"sip://adaheads", 
\end_layout

\begin_layout LyX-Code
"org_id":1
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
An empty JSON document is returned if no 
\emph on
org_id
\emph default
 organization is found in the database:
\end_layout

\begin_layout LyX-Code
{}
\end_layout

\begin_layout Subsection
/get/org_contacts?org_id=[natural integer]
\end_layout

\begin_layout Standard
This interface returns all the contact entities associated with 
\emph on
org_id
\emph default
.
 Example JSON:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"contacts":
\end_layout

\begin_layout LyX-Code
[
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"name":"Zaphod B.", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":4, 
\end_layout

\begin_layout LyX-Code
"org_id":2, 
\end_layout

\begin_layout LyX-Code
"ce_name":"Zaphod B."
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"name":"Tricia Takanawa", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1, 
\end_layout

\begin_layout LyX-Code
"org_id":2, 
\end_layout

\begin_layout LyX-Code
"ce_name":"Tricia Takanawa"
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The 
\emph on
contacts
\emph default
 node contains an array, so it can hold multiple contact entities.
 If no contact entities are associated with the given 
\emph on
org_id
\emph default
 the following JSON document is returned:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"contacts":[]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Subsection
/get/org_contacts_attributes?org_id=[natural integer]
\end_layout

\begin_layout Standard
This interface returns all the contact entity attribute sets associated
 with 
\emph on
org_id
\emph default
.
 Example JSON document:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"attributes":
\end_layout

\begin_layout LyX-Code
[
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"phone":"555-777-888", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":1, 
\end_layout

\begin_layout LyX-Code
"org_id":1
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\end_deeper
\begin_layout LyX-Code
"email":"some@email.address",
\end_layout

\begin_layout LyX-Code
"tags":["Ada","Slackware","Linux"]
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"phone":"444-555-777", 
\end_layout

\begin_layout LyX-Code
"db_columns":
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"ce_id":7, 
\end_layout

\begin_layout LyX-Code
"org_id":1
\end_layout

\end_deeper
\begin_layout LyX-Code
}, 
\end_layout

\end_deeper
\begin_layout LyX-Code
"email":"contact@me.here"
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Because there can be several contact entity attribute sets associated an
 
\emph on
org_id
\emph default
 the 
\emph on
attributes
\emph default
 JSON node contains an array.
 If there are no attribute sets, the following JSON document is returned:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"attributes":[]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Subsection
/get/queue
\end_layout

\begin_layout Standard
This interface returns the current call queue.
 This is updated once each second, so polling the /get/queue interface more
 often than once each second is both wasteful and pointless.
 Calling for example:
\end_layout

\begin_layout LyX-Code
/get/queue
\end_layout

\begin_layout Standard
will return a JSON string like this:
\end_layout

\begin_layout LyX-Code
{     
\end_layout

\begin_deeper
\begin_layout LyX-Code
"normal": 
\end_layout

\end_deeper
\begin_layout LyX-Code
    [         
\end_layout

\begin_deeper
\begin_layout LyX-Code
    {             
\end_layout

\begin_deeper
\begin_layout LyX-Code
    "UTC_start_date":"2012-02-22 14:23:30",
\end_layout

\begin_layout LyX-Code
    "id":"GDhcf2VBww",               
\end_layout

\begin_layout LyX-Code
    "unix_timestamp":"1329920610",             
\end_layout

\begin_layout LyX-Code
    "callee":5,             
\end_layout

\begin_layout LyX-Code
    "caller":"d7sIp1kR"         
\end_layout

\end_deeper
\begin_layout LyX-Code
    }
\end_layout

\end_deeper
\begin_layout LyX-Code
    ],
\end_layout

\begin_deeper
\begin_layout LyX-Code
"high": 
\end_layout

\end_deeper
\begin_layout LyX-Code
    [         
\end_layout

\begin_deeper
\begin_layout LyX-Code
    {              
\end_layout

\begin_deeper
\begin_layout LyX-Code
    "UTC_start_date":"2012-02-22 14:23:11",
\end_layout

\begin_layout LyX-Code
    "id":"bRbYsMUVqx",             
\end_layout

\begin_layout LyX-Code
    "unix_timestamp":"1329920591",                 
\end_layout

\begin_layout LyX-Code
    "callee":3,             
\end_layout

\begin_layout LyX-Code
    "caller":"oCgDF7ua"         
\end_layout

\end_deeper
\begin_layout LyX-Code
    }
\end_layout

\end_deeper
\begin_layout LyX-Code
    ],
\end_layout

\begin_deeper
\begin_layout LyX-Code
"low": 
\end_layout

\end_deeper
\begin_layout LyX-Code
    [         
\end_layout

\begin_deeper
\begin_layout LyX-Code
    {             
\end_layout

\begin_deeper
\begin_layout LyX-Code
    "UTC_start_date":"2012-02-22 14:23:17",            
\end_layout

\begin_deeper
\begin_layout LyX-Code
 "id":"VV8BFqGpqG",             
\end_layout

\end_deeper
\begin_layout LyX-Code
    "unix_timestamp":"1329920597",              
\end_layout

\begin_layout LyX-Code
    "callee":9,             
\end_layout

\begin_deeper
\begin_layout LyX-Code
 "caller":"ZQsRogwB"         
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
    }
\end_layout

\end_deeper
\begin_layout LyX-Code
    ],
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Quotes eld
\end_inset

length
\begin_inset Quotes erd
\end_inset

:3
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The 
\emph on
normal
\emph default
, 
\emph on
low
\emph default
 and 
\emph on
high
\emph default
 nodes represent priority in the queue.
 All these naturally contains arrays of calls.
 The 
\emph on
length
\emph default
 node contains the totalt length of the queue.
 The
\emph on
 callee
\emph default
 node maps to an 
\emph on
org_id
\emph default
.
 An empty queue returns the following JSON document:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"normal":[], 
\end_layout

\begin_layout LyX-Code
"length":0, 
\end_layout

\begin_layout LyX-Code
"high":[], 
\end_layout

\begin_layout LyX-Code
"low":[]
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Subsection
/get/queue_length
\end_layout

\begin_layout Standard
This interface returns the length of the current call queue.
 Example JSON document:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_deeper
\begin_layout LyX-Code
"length":7
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
